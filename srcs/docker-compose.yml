version: '3.8'

services:
  nginx:
    container_name: nginx
    build: ./requirements/nginx
    restart: unless-stopped
    volumes:
      - wordpress:/var/www/html
    networks:
      - docker-network
    ports:
      - 443:443

  wordpress:
    container_name: wordpress
    build:
      context: ./requirements/wordpress
      args:
        - MYSQL_DB_ARG=${MYSQL_DB}
        - MYSQL_USER_ARG=${MYSQL_USER}
        - MYSQL_PW_ARG=${MYSQL_PW}
        - MYSQL_HOST_ARG=${MYSQL_HOST}
        - REDIS_HOST_ARG=${REDIS_HOST}
        - REDIS_PW_ARG=${REDIS_PW}
    restart: unless-stopped
    volumes:
      - wordpress:/var/www/html
    networks:
      - docker-network
    depends_on:
      - mariadb
      - redis

  mariadb:
    container_name: mariadb
    build:
      context: ./requirements/mariadb
      args:
        - MYSQL_ROOT_PW_ARG=${MYSQL_ROOT_PW}
        - MYSQL_DB_ARG=${MYSQL_DB}
        - MYSQL_USER_ARG=${MYSQL_USER}
        - MYSQL_PW_ARG=${MYSQL_PW}
    restart: unless-stopped
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - docker-network

  ftp:
    container_name: ftp
    build:
      context: ./requirements/bonus/ftp
      args:
        - FTP_USER_ARG=${FTP_USER}
        - FTP_PW_ARG=${FTP_PW}
    restart: unless-stopped
    volumes:
      - wordpress:/home/rftp_user/ftp/files
    networks:
      - docker-network
    ports:
      - 20:20
      - 21:21
      - 990:990
      - 47400-47470:47400-47470
    depends_on:
      - wordpress

  redis:
    container_name: redis
    build:
      context: ./requirements/bonus/redis
      args:
        - REDIS_PW_ARG=${REDIS_PW}
    restart: unless-stopped
    networks:
      - docker-network

volumes:
  wordpress:
    driver: local

  mariadb:
    driver: local

networks:
  docker-network:
    driver: bridge
